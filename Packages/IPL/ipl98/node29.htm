<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0065)node29.html -->
<!--Converted with LaTeX2HTML 98.1p1 release (March 2nd, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others --><HTML><HEAD><TITLE>Borders</TITLE>
<META content=Borders name=description>
<META content=include_all name=keywords>
<META content=document name=resource-type>
<META content=global name=distribution>
<META content="text/html; charset=iso-8859-1" http-equiv=Content-Type><LINK 
href="node29_files/include_all.css" rel=STYLESHEET><LINK href="node30.htm"
rel=next><LINK href="node28.htm" rel=previous><LINK href="node27.htm"
rel=up><LINK href="node30.htm" rel=next>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR></HEAD>
<BODY><!--Navigation Panel--><A 
href="node30.htm"
name=tex2html516><IMG align=bottom alt=next border=0 height=24 
src="node29_files/next_motif.gif" width=37></A> <A 
href="node27.htm"
name=tex2html512><IMG align=bottom alt=up border=0 height=24 
src="node29_files/up_motif.gif" width=26></A> <A 
href="node28.htm"
name=tex2html506><IMG align=bottom alt=previous border=0 height=24 
src="node29_files/previous_motif.gif" width=63></A> <A 
href="node1.htm"
name=tex2html514><IMG align=bottom alt=contents border=0 height=24 
src="node29_files/contents_motif.gif" width=65></A> <A 
href="node61.htm"
name=tex2html515><IMG align=bottom alt=index border=0 height=24 
src="node29_files/index_motif.gif" width=43></A> <BR><B>Next:</B> <A 
href="node30.htm"
name=tex2html517>Save, load and show</A> <B>Up:</B> <A 
href="node27.htm"
name=tex2html513>Using IPL98 to represent</A> <B>Previous:</B> <A 
href="node28.htm"
name=tex2html507>Creating an image in</A> <BR><BR><!--End of Navigation Panel-->
<H2><A name=SECTION00092000000000000000>&nbsp;</A><A name=786>&nbsp;</A> 
<BR>Borders </H2>With all image classes is a border associated which can be 
dynamically resized. A border is convenient for instance when using a filter 
mask on a whole image, if the border is set to half the size of the mask and has 
the same color as the background of the image the programmer does not have to 
take special care of the problem with accessing pixel positions outside the 
image when the mask is near the edge of the image. Here is an example on how to 
manipulate the border of an image: 
<P><PRE>void main()
{
   CImage Img(768,512,8);
   Img.SetBorderSize(5); // set a border of size 5
   Img.SetBorderColor(0); // set color of border to 0 (black)

   // get the actual size and print it to stdout
   cout &lt;&lt; "Size of border is " &lt;&lt; Img.GetBorderSize() &lt;&lt; endl;

   Img.SetBorder(10,255); // set border of size 10, color 255 (white)
                          // the old border content are destroyed
}
</PRE>
<P><BR>
<HR>

<ADDRESS><I>Rene Dencker Eriksen</I> <BR><I>2001-01-31</I> 
</ADDRESS></BODY></HTML>
