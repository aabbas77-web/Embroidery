<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0065)node30.html -->
<!--Converted with LaTeX2HTML 98.1p1 release (March 2nd, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others --><HTML><HEAD><TITLE>Save, load and show an image</TITLE>
<META content="Save, load and show an image" name=description>
<META content=include_all name=keywords>
<META content=document name=resource-type>
<META content=global name=distribution>
<META content="text/html; charset=iso-8859-1" http-equiv=Content-Type><LINK 
href="node30_files/include_all.css" rel=STYLESHEET><LINK href="node31.htm"
rel=next><LINK href="node29.htm" rel=previous><LINK href="node27.htm"
rel=up><LINK href="node31.htm" rel=next>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR></HEAD>
<BODY><!--Navigation Panel--><A 
href="node31.htm"
name=tex2html528><IMG align=bottom alt=next border=0 height=24 
src="node30_files/next_motif.gif" width=37></A> <A 
href="node27.htm"
name=tex2html524><IMG align=bottom alt=up border=0 height=24 
src="node30_files/up_motif.gif" width=26></A> <A 
href="node29.htm"
name=tex2html518><IMG align=bottom alt=previous border=0 height=24 
src="node30_files/previous_motif.gif" width=63></A> <A 
href="node1.htm"
name=tex2html526><IMG align=bottom alt=contents border=0 height=24 
src="node30_files/contents_motif.gif" width=65></A> <A 
href="node61.htm"
name=tex2html527><IMG align=bottom alt=index border=0 height=24 
src="node30_files/index_motif.gif" width=43></A> <BR><B>Next:</B> <A 
href="node31.htm"
name=tex2html529>Manipulating an image in</A> <B>Up:</B> <A 
href="node27.htm"
name=tex2html525>Using IPL98 to represent</A> <B>Previous:</B> <A 
href="node29.htm"
name=tex2html519>Borders</A> <BR><BR><!--End of Navigation Panel-->
<H2><A name=SECTION00093000000000000000>&nbsp;</A> <A name=790>&nbsp;</A> <A 
name=791>&nbsp;</A> <A name=792>&nbsp;</A> <A name=793>&nbsp;</A> <A 
name=794>&nbsp;</A> <A name=subsec:saveloadshow>&nbsp;</A> <BR>Save, load and 
show an image </H2>The two image classes CImage and CByteImage can be loaded 
from and saved in two standard file formats<A name=796>&nbsp;</A><A 
href="footnode.html#foot797"
name=tex2html16><SUP>11</SUP></A>: BMP<A name=798>&nbsp;</A> (Windows Bitmap) 
and PGM<A name=799>&nbsp;</A> (Portable Gray Map). The BMP is a standard format 
which is recognized by most image related applications and is build to be easy 
and fast for MS Windows to handle. It may include an associated palette (this is 
the case when working with 1 and 8 b/p images) and in that case the pixel values 
are indexes in this palette. If no palette is present the pixel values consists 
of four bytes where three of these bytes is the RGB value. The PGM format is 
supported for two reasons: 
<P>
<DL compact>
  <DT>1. 
  <DD>The image information and pixel data is stored in ASCII format and 
  therefore easy to read for other applications such as MATLAB and Mathematica. 
  <DT>2. 
  <DD>Comment lines can be included in the top of the file. This means that 
  image information can be stored directly in the file. An example is 
  information about time, date, camera settings and camera type used for 
  acquiring the image. </DD></DL>
<P>The drawback of PGM is that it only supports gray tone images and at the 
moment only 8 b/p can be used with this format. More details about the graphics 
formats can be found on the World Wide Web at: http://www.wotsit.org. 
<P>To decide what file type an image is to be stored as simply use the correct 
extension in the given filename, the two methods <TT>Load(``filename'')</TT><A 
name=803>&nbsp;</A> and <TT>Save(``filename'')</TT><A name=805>&nbsp;</A> are 
used to handle the loading and saving of images: 
<P><PRE>void main()
{
   CByteImage Img(768,512); // byte image, always 8 b/p
   CImage ImgDest(10,10,24); // image with 24 b/p

   Img.Save("c:/temp/testimage.bmp"); // save Img in BMP file format
   Img.Save("c:\\temp\\testimage.pgm"); // save Img in PGM file format

   cout &lt;&lt; "ImgDest before loading: " &lt;&lt; endl &lt;&lt; ImgDest &lt;&lt; endl;
   ImgDest.Load("c:/temp/testimage.bmp"); // old image destroyed
   cout &lt;&lt; endl &lt;&lt; "ImgDest after loading: " &lt;&lt; endl &lt;&lt; ImgDest &lt;&lt; endl;
}
</PRE>
<P>Both slash (<TT>/</TT>) and back slash (<CODE>\</CODE>) can be used in the 
path as shown in the example but remember to <EM>escape</EM> the back slash, 
otherwise C/C++ will treat the following character as a special symbol. 
<P>The two remaining CFloatImage<A name=810>&nbsp;</A> and CIntImage<A 
name=811>&nbsp;</A> classes cannot be saved in a normal graphic file type 
format. A simple ASCII format have been chosen and here is a small sample 
program showing a CIntImage file format: <PRE>void main()
{
        CIntImage IntImg(5,3); // integer image
        IntImg.Save("c:/temp/testimage.txt"); // save image as ASCII text
        cout &lt;&lt;  IntImg &lt;&lt; endl;
}
</PRE>This program produces a file containing this: <PRE># Int image written by IPL98 version 1.01

## WidthHeight 5 3
## RowsCols 3 5

0       0       0       0       0
0       0       0       0       0
0       0       0       0       0
</PRE>Here is an example with the CFloatImage: <PRE>void main()
{
    CFloatImage FloatImg(4,3); // integer image
        FloatImg.SetPixel(1,0,598694868);
        FloatImg.SetPixel(2,0,-21e-5);
    FloatImg.Save("c:/temp/testimage.txt"); // save image as ASCII text
    cout &lt;&lt;  FloatImg &lt;&lt; endl;
}
</PRE>This program produces a file containing this: <PRE># Float image written by IPL98 version 1.01

## WidthHeight 4 3
## RowsCols 3 4

 0.000000e+000   5.986948e+008  -2.100000e-004   0.000000e+000  
 0.000000e+000   0.000000e+000   0.000000e+000   0.000000e+000  
 0.000000e+000   0.000000e+000   0.000000e+000   0.000000e+000
</PRE>Lines with comments must begin with a single ``#'' character and can be 
placed anywhere before the image data. Lines beginning with two ``#'' characters 
are treated as special information and must be followed by a space and a token. 
At present two tokens with the same information exists: WidthHeight and 
RowsCols. At least one of them must be present, if both are present IPL98 will 
produce an error if they do not contain the same dimensions. After these lines 
is the image data seperated by white spaces and each row ended by a 
<CODE>\n</CODE> (newline) character. This format is intended to be easy to work 
with for other programs. 
<P>As mentioned before methods for showing images is not included in the library 
because it is hardware dependent, see section&nbsp;<A 
href="node8.html#sec:structure"><IMG
align=bottom alt=[*] border=1 src="node30_files/cross_ref_motif.gif"></A> on 
page&nbsp;<A 
href="node8.html#sec:structure"><IMG
align=bottom alt=[*] border=1 src="node30_files/cross_ref_motif.gif"></A> about 
where to obtain more information. But even without a method for showing images 
it is often enough to save the image after some processing and check the result 
in a standard image application. 
<P>
<HR>
<!--Navigation Panel--><A 
href="node31.htm"
name=tex2html528><IMG align=bottom alt=next border=0 height=24 
src="node30_files/next_motif.gif" width=37></A> <A 
href="node27.htm"
name=tex2html524><IMG align=bottom alt=up border=0 height=24 
src="node30_files/up_motif.gif" width=26></A> <A 
href="node29.htm"
name=tex2html518><IMG align=bottom alt=previous border=0 height=24 
src="node30_files/previous_motif.gif" width=63></A> <A 
href="node1.htm"
name=tex2html526><IMG align=bottom alt=contents border=0 height=24 
src="node30_files/contents_motif.gif" width=65></A> <A 
href="node61.htm"
name=tex2html527><IMG align=bottom alt=index border=0 height=24 
src="node30_files/index_motif.gif" width=43></A> <BR><B>Next:</B> <A 
href="node31.htm"
name=tex2html529>Manipulating an image in</A> <B>Up:</B> <A 
href="node27.htm"
name=tex2html525>Using IPL98 to represent</A> <B>Previous:</B> <A 
href="node29.htm"
name=tex2html519>Borders</A> <!--End of Navigation Panel-->
<ADDRESS><I>Rene Dencker Eriksen</I> <BR><I>2001-01-31</I> 
</ADDRESS></BODY></HTML>
